pipeline{
  agent{
    docker {
      image 'pbsajil/docker-daemon:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages{
    stage('Checkout code'){
      steps{
        withCredentials([usernamePassword(credentialsId: 'git-credentials', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]){
          git branch: 'main', credentialsId: 'git-credentials', url: 'https://github.com/sajil143pb/jenkins.git'
        }
      }
    }
    stage('Build Docker image and push'){
      environment{
        DOCKER_CREDENTIALS = credentials('docker-hub-credentials')
         DOCKER_IMAGE = "'pbsajil/myapp:${BUILD_NUMBER}"
      }
      steps{
        script{
          docker.build("${DOCKER_IMAGE}", '-f java_eks_helm_argo/App/Dockerfile .')
          docker.withRegistry('https://index.docker.io/v1/', 'docker-hub-credentials'){
            docker.image("${DOCKER_IMAGE}").push() 
          }
        }
      }
    }
    // stage("Deploy to EKS staging enviorment"){
    //   steps{
    //     script{
    //       withCredentials([string(credentialsId: 'aws-credentials', variable: 'AWS_CREDENTIALS')]){
    //         sh 'echo $AWS_CREDENTIALS > /root/.aws/credentials'
    //         sh 'aws eks update-kubeconfig --region us-east-1 --name demo-eks'
    //         sh 'helm upgrade --install myapp java_eks_helm_argo/Argocd/myapp -n staging'
    //       }
    //     }
    //   }
    // }
  }
}
